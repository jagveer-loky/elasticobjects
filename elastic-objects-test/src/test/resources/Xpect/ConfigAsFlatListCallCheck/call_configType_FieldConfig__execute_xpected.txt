"naturalId";"modelKeys";"description";"module";"subModule";"fieldKey";"scope";"dbFieldParams";"eoFieldParams";"viewFieldParams";
"absolute";"Boolean";"x";"elastic-objects";"";"absolute";"";"";"";"";
"abstract";"Boolean";"If true the generated model will be initially set as abstract class.";"elastic-objects";"";"abstract";"";"";"";"";
"author";"String";"The author of the class.";"elastic-objects";"";"author";"";"";"";"";
"bean";"String";"For a bean constructor show which bean is the source for a configuration";"elastic-objects";"";"bean";"";"";"";"";
"cached";"Boolean";"If true will cache the readed file within the cache object. ";"elastic-objects";"";"cached";"";"";"";"";
"colKeys";"List,String";"The key list for mapping values in a value list. ";"elastic-objects";"";"colKeys";"";"";"";"";
"compare";"Boolean";"Indicates a comparision before writing in @FileWriteCall";"elastic-objects";"";"compare";"";"";"";"";
"condition";"String";"A condition for calls. ";"elastic-objects";"";"condition";"";"";"";"";
"configFilter";"String";"Key for filter configuration";"elastic-objects";"";"configFilter";"";"";"";"";
"configKey";"String";"Key for configuration @Config";"elastic-objects";"";"configKey";"";"";"";"";
"configModelKey";"String";"The model of the configuration to determine type.";"elastic-objects";"";"configModelKey";"";"";"";"";
"configType";"String";"Key for configuration type like ModelConfig, FileConfig, FieldConfig, HostConfig, DbSqlConfig.";"elastic-objects";"";"configType";"";"";"";"";
"content";"String";"A content for different calls. In a template context the content of the markup. ";"elastic-objects";"";"content";"";"";"";"";
"create";"Boolean";"If true will create a Java class.";"elastic-objects";"";"create";"";"";"";"";
"creationDate";"Date";"Used to define the creation of an item.";"elastic-objects";"";"creationDate";"";"";"";"";
"dbAnnotated";"Boolean";"If true a db annotation will be generated for java instance vars. ";"elastic-objects";"";"dbAnnotated";"";"";"";"";
"default";"Boolean";"Set when an default implementation is defined within an interface. ";"elastic-objects";"";"default";"";"";"";"";
"defaultImplementation";"String";"defaultImplementation";"elastic-objects";"";"defaultImplementation";"";"";"";"";
"delete";"String";"String representation of RolePermission delete permissions";"elastic-objects";"";"delete";"";"";"";"";
"description";"String";"A description of the model used by every model extending BaseClassImpl. ";"elastic-objects";"";"description";"";"";"";"";
"duration";"Long";"The duration of a call.";"elastic-objects";"";"duration";"";"";"";"";
"endDirective";"String";"A content inclueded after template.";"elastic-objects";"";"endDirective";"";"";"";"";
"entries";"ArrayList";"entries";"elastic-objects";"";"entries";"";"";"";"";
"execute";"String";"String representation of RolePermission execute permissions";"elastic-objects";"";"execute";"";"";"";"";
"expose";"Expose";"expose";"elastic-objects";"";"expose";"";"";"";"";
"fieldBeans";"Map,FieldBean";"A fieldBean map with @ModelBean";"elastic-objects";"";"fieldBeans";"";"";"";"";
"fieldConfigMap";"Map,FieldConfig";"A fieldBean map with @FieldConfig";"elastic-objects";"";"fieldConfigMap";"";"";"";"";
"fieldDelimiter";"String";"A delimiter for fields used for csv files. ";"elastic-objects";"";"fieldDelimiter";"";"";"";"";
"fieldKey";"String";"fieldKey";"elastic-objects";"";"fieldKey";"";"";"";"";
"fieldKeys";"List,String";"A list of field keys for the model configuration. ";"elastic-objects";"";"fieldKeys";"";"";"";"";
"fieldName";"String";"A name for different purposes depending on the model.";"elastic-objects";"";"fieldName";"";"";"";"";
"fileConfigKey";"String";"Defines the key for a file configuration @FileConfig where to read or write a file.";"elastic-objects";"";"fileConfigKey";"";"";"";"";
"fileEnding";"String";"It's used to specify the file ending in different context. ";"elastic-objects";"";"fileEnding";"";"";"";"";
"fileName";"String";"A fileName used in different calls and configs like @FileConfig or @DirectoryConfig. ";"elastic-objects";"";"fileName";"";"";"";"";
"filePath";"String";"A filePath used in different calls and configs like @FileConfig or @DirectoryConfig. ";"elastic-objects";"";"filePath";"";"";"";"";
"filter";"String";"Filter for List entries.";"elastic-objects";"";"filter";"";"";"";"";
"final";"Boolean";"If true only a setter for the private variable is generated. When setting a value in an EO context an exception is thrown. ";"elastic-objects";"";"final";"";"";"";"";
"generated";"Boolean";"Indicates a generated value?! A generated flag for @FieldBean";"elastic-objects";"";"generated";"";"";"";"";
"hibernate";"String";"hibernate";"elastic-objects";"";"hibernate";"";"";"";"";
"hibernateAnnotations";"Boolean";"sets a Flag for using hibernate annotations when bean is created. ";"elastic-objects";"";"hibernateAnnotations";"";"";"";"";
"hostConfigKey";"String";"A key for host objects.";"elastic-objects";"";"hostConfigKey";"";"";"";"";
"hostName";"String";"A name for host objects.";"elastic-objects";"";"hostName";"";"";"";"";
"id";"Long";"The numeric id of an instance of a class.";"elastic-objects";"";"id";"";"";"";"";
"idKey";"String";"The id key defined in modelsList";"elastic-objects";"";"idKey";"";"";"";"";
"indent";"Integer";"The number of indent for serialization level.";"elastic-objects";"";"indent";"";"";"";"";
"inputKey";"String";"A key for a input view.";"elastic-objects";"";"inputKey";"";"";"";"";
"interfaces";"String";"A comma separeted list of interface keys. ";"elastic-objects";"";"interfaces";"";"";"";"";
"javaProperties";"Map";"A map of properties used in configs and calls.";"elastic-objects";"";"javaProperties";"";"";"";"";
"javascriptType";"String";"The type of javascript is derived from the java type.";"elastic-objects";"";"javascriptType";"";"";"";"";
"join";"String";"A reference key to a id field for joining.";"elastic-objects";"";"join";"";"";"";"";
"joinInverse";"String";"A self reference key to a id field on a glue n-m table.";"elastic-objects";"";"joinInverse";"";"";"";"";
"jsonIgnore";"Boolean";"jsonIgnore";"elastic-objects";"";"jsonIgnore";"";"";"";"";
"keepCall";"KeepCalls";"Will use an existing  result file beforehand as template. ";"elastic-objects";"";"keepCall";"";"";"";"";
"key";"String";"A generic key.";"elastic-objects";"";"key";"";"";"";"";
"length";"Integer";"Length of a field.";"elastic-objects";"";"length";"";"";"";"";
"listParams";"ListParams";"Parameters of type @ListParams for list type read call operations like @CsvSimpleReadCall.";"elastic-objects";"";"listParams";"";"";"";"";
"localFieldKeys";"ArrayList,String";"A list of field as proivided by the model configuration. ";"elastic-objects";"";"localFieldKeys";"";"";"";"";
"logLevel";"LogLevel";"logLevel";"elastic-objects";"";"logLevel";"";"";"";"";
"mapKey";"String";"The field used as a key for joined maps. ";"elastic-objects";"";"mapKey";"";"";"";"";
"max";"Integer";"A maximal length for field string types";"elastic-objects";"";"max";"";"";"";"";
"min";"Integer";"A minimal length for field string types";"elastic-objects";"";"min";"";"";"";"";
"modelConfigKey";"String";"The model name for the cache object @ModelConfig.";"elastic-objects";"";"modelConfigKey";"";"";"";"";
"modelKey";"String";"The model name for the bean/action object @ModelConfig.";"elastic-objects";"";"modelKey";"";"";"";"";
"modelKeys";"String";"A string representation for a list of modelsConfig.";"elastic-objects";"";"modelKeys";"";"";"";"";
"modelList";"ArrayList,String";"A list of naturalIds of models for FieldConfig.";"elastic-objects";"";"modelList";"";"";"";"";
"models";"String";"A string representation for a list of model keys.";"elastic-objects";"";"models";"";"";"";"";
"modificationDate";"Date";"Will be set whenever a bean derived from super class @BaseBean is instantiated. ";"elastic-objects";"";"modificationDate";"";"";"";"";
"module";"String";"Defines a target module where generating occurs. ";"elastic-objects";"";"module";"";"";"";"";
"moduleScope";"String";"Defines scope of the configuration within module, eg 'test' or 'main' .";"elastic-objects";"";"moduleScope";"";"";"";"";
"myAnObject";"AnObject";"A AnObject field.";"elastic-objects-test";"";"myAnObject";"";"";"";"";
"myASubObject";"ASubObject";"myASubObject";"elastic-objects-test";"";"myASubObject";"";"";"";"";
"myASubObjectList";"List,ASubObject";"A generic parametrized example List with @ASubObject";"elastic-objects-test";"";"myASubObjectList";"";"";"";"";
"myASubObjectMap";"Map,ASubObject";"A generic parametrized example Map with @ASubObject";"elastic-objects-test";"";"myASubObjectMap";"";"";"";"";
"myBoolean";"Boolean";"myBoolean";"elastic-objects-test";"";"myBoolean";"";"";"";"";
"myDate";"Date";"myDate";"elastic-objects-test";"";"myDate";"";"";"";"";
"myDouble";"Double";"myDouble";"elastic-objects-test";"";"myDouble";"";"";"";"";
"myFloat";"Float";"myFloat";"elastic-objects-test";"";"myFloat";"";"";"";"";
"myInt";"Integer";"myInt";"elastic-objects-test";"";"myInt";"";"";"";"";
"myList";"List";"myList";"elastic-objects-test";"";"myList";"";"";"";"";
"myLong";"Long";"myLong";"elastic-objects-test";"";"myLong";"";"";"";"";
"myMap";"Map";"myMap";"elastic-objects-test";"";"myMap";"";"";"";"";
"myObject";"Object";"A test object thing. ";"elastic-objects-test";"";"myObject";"";"";"";"";
"myString";"String";"Just a small test string used in test models. ";"elastic-objects-test";"";"myString";"";"";"";"";
"name";"String";"The name field of a class. ";"elastic-objects";"";"name";"";"";"";"";
"naturalId";"String";"The natural key in @Base";"elastic-objects";"";"naturalId";"";"";"";"";
"naturalKeys";"ArrayList,String";"naturalKeys";"elastic-objects";"";"naturalKeys";"";"";"";"";
"notNull";"Boolean";"notNull";"elastic-objects";"";"notNull";"";"";"";"";
"override";"Boolean";"Indicates that a super or interface defines the method already but is overwritten. When java is generated an override annotation is set. ";"elastic-objects";"";"override";"";"";"";"";
"overwrite";"Boolean";"A overwrite field flag for @Call.";"elastic-objects";"";"overwrite";"";"";"";"";
"packageGroup";"String";"Defines to which group a model belong e.g. asset/cache/action";"elastic-objects";"";"packageGroup";"";"";"";"";
"packagePath";"String";"packagePath";"elastic-objects";"";"packagePath";"";"";"";"";
"password";"String";"The password instance var.";"elastic-objects";"";"password";"";"";"";"";
"Permissions.create";"String";"String representation of RolePermission create permissions";"elastic-objects";"";"create";"";"";"";"";
"port";"Integer";"port";"elastic-objects";"";"port";"";"";"";"";
"postpend";"String";"postpend String when executed by ExecutorCallImpl";"elastic-objects";"";"postpend";"";"";"";"";
"prepend";"String";"prepend String when executed by ExecutorCallImpl";"elastic-objects";"";"prepend";"";"";"";"";
"properties";"Map";"Properties for configurations.";"elastic-objects";"";"properties";"";"";"";"";
"property";"Boolean";"Indicates that a field is a config property map value which can be implemented as a default interface method. ";"elastic-objects";"";"property";"";"";"";"";
"protocol";"String";"protocol";"elastic-objects";"";"protocol";"";"";"";"";
"read";"String";"String representation of RolePermission read permissions";"elastic-objects";"";"read";"";"";"";"";
"replaceBy";"String";"replaceBy";"elastic-objects";"";"replaceBy";"";"";"";"";
"rolePermissions";"PermissionRole";"Lists for the different roles e.g. guest for write. Central point add permissions to a configuration. Dependent of the permission type of a call a certain list wll be selected. When ist write with role guest then no exception is thrown. ";"elastic-objects";"";"rolePermissions";"";"";"";"";
"rowDelimiter";"String";"A delimiter for rows used for csv files.";"elastic-objects";"";"rowDelimiter";"";"";"";"";
"rowEnd";"Integer";"rowEnd";"elastic-objects";"";"rowEnd";"";"";"";"";
"rowHead";"Integer";"rowHead";"elastic-objects";"";"rowHead";"";"";"";"";
"rowStart";"Integer";"rowStart";"elastic-objects";"";"rowStart";"";"";"";"";
"scope";"List,Scope";"A scope for the cache value.";"elastic-objects";"";"scope";"";"";"";"";
"serializationType";"JSONSerializationType";"The types of Serialization. ";"elastic-objects";"";"serializationType";"";"";"";"";
"serialized";"String";"The serialized field for @{link pathPattern}.";"elastic-objects";"";"serialized";"";"";"";"";
"shapeType";"ShapeTypes";"shapeType";"elastic-objects";"";"shapeType";"";"";"";"";
"sortOrder";"SortOrder";"A field with a SortOrder enum";"elastic-objects";"";"sortOrder";"";"";"";"";
"sourceFileConfigKey";"String";"Defines the key for a file configuration @FileConfig where to read a file.";"elastic-objects";"";"sourceFileConfigKey";"";"";"";"";
"sourcePath";"String";"A sourcePath where EO offers it's input value when the execution starts.";"elastic-objects";"";"sourcePath";"";"";"";"";
"startCondition";"String";"A condition for calls. ";"elastic-objects";"";"startCondition";"";"";"";"";
"startDirective";"String";"A content included before template.";"elastic-objects";"";"startDirective";"";"";"";"";
"staticName";"Boolean";"staticName";"elastic-objects";"";"staticName";"";"";"";"";
"super";"Boolean";"Marker to show, that the field is implemented in a super class. ";"elastic-objects";"";"super";"";"";"";"";
"superKey";"String";"A key for the super class of a class.";"elastic-objects";"";"superKey";"";"";"";"";
"table";"String";"The name of the persistence entity.";"elastic-objects";"";"table";"";"";"";"";
"targetConfigKey";"String";"The naturalId of a FileConfig entry with an embedded FileWriteCall. ";"elastic-objects";"";"targetConfigKey";"";"";"";"";
"targetFile";"String";"The naturalId of a FileConfig entry with an embedded FileWriteCall. ";"elastic-objects";"";"targetFile";"";"";"";"";
"targetFileConfigKey";"String";"A target for persisting template results in TemplateResourceStoreCall. ";"elastic-objects";"";"targetFileConfigKey";"";"";"";"";
"targetPath";"String";"A targetPath where the result of the execution will be mapped. If value is ""_asString"" no mapping occured but a seralized version is returned as value to embed it in the resulting file. Path parameters could be set dynamically with =&gt;[path]. in any combination.";"elastic-objects";"";"targetPath";"";"";"";"";
"template";"String";"template";"elastic-objects";"";"template";"";"";"";"";
"templateFileConfigKey";"String";"The field name for a ""naturalId"" in ""FileConfig"" whenever a file resource is used for a template processing. ";"elastic-objects";"";"templateFileConfigKey";"";"";"";"";
"toReplace";"String";"toReplace";"elastic-objects";"";"toReplace";"";"";"";"";
"transient";"Boolean";"Will ignore field when a persistiong occure. Create a transient annotation when java is generated. ";"elastic-objects";"";"transient";"";"";"";"";
"unique";"Boolean";"unique";"elastic-objects";"";"unique";"";"";"";"";
"upper.ID";"Long";"Alias for id with uppercase.";"elastic-objects";"";"ID";"";"";"";"";
"url";"String";"url";"elastic-objects";"";"url";"";"";"";"";
"user";"String";"user";"elastic-objects";"";"user";"";"";"";"";
"value";"String";"value";"elastic-objects";"";"value";"";"";"";"";
"viewKey";"String";"A key for a view.";"elastic-objects";"";"viewKey";"";"";"";"";
"write";"String";"String representation of RolePermission write permissions";"elastic-objects";"";"write";"";"";"";"";
