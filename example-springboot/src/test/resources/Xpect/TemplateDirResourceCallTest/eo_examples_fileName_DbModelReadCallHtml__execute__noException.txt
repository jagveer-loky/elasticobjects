<h5>Read Example</h5>
<p>With
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/eo-db/src/main/java/org/fluentcodes/projects/elasticobjects/calls/db/DbModelReadCall.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/DbModelReadCall">&equiv;DbModelReadCall</a>

    one has the possibility to execute generic database queries
    on the server side depending on the object parameters defined in
<a href="/config/FieldConfig/sourcePath">&equiv;sourcePath</a>
.
</p>
<form action="/eo-form" method="post" target="example">
    <textarea name="eo" style="height:120px">{
   "(AnObject)abc":{
        "id":1
   },
   "(DbModelReadCall)/xyz":{
        "sourcePath":"abc",
       "hostConfigKey":"h2:mem:basic"
   },
   "_serializationType":"STANDARD"
}</textarea>
    <input type="submit" value="post"/>
</form>
<p>
In the example the
<a href="/config/FieldConfig/sourcePath">&equiv;sourcePath</a>

    "abc" contains an
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/elastic-objects-test/src/main/java/org/fluentcodes/projects/elasticobjects/domain/test/AnObject.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/AnObject">&equiv;AnObject</a>

    object with
<a href="/config/FieldConfig/id">&equiv;id</a>
=1.

<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/eo-db/src/main/java/org/fluentcodes/projects/elasticobjects/calls/db/DbModelReadCall.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/DbModelReadCall">&equiv;DbModelReadCall</a>

    will query the first entry of the preloaded
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/eo-db/src/main/resources//DbSqlConfig.json#L40"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/>DbSqlConfig.json#L40</a></nobreak>
    and store the result to the
<a href="/config/FieldConfig/targetPath">&equiv;targetPath</a>
 "xyz".
</p>
<p>
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/elastic-objects-test/src/main/java/org/fluentcodes/projects/elasticobjects/domain/test/AnObject.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/AnObject">&equiv;AnObject</a>
 shows that there is a read property for "guest".

</p>
<p>
    So the examples for
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/eo-db/src/main/java/org/fluentcodes/projects/elasticobjects/calls/db/DbModelWriteCall.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/DbModelWriteCall">&equiv;DbModelWriteCall</a>

    or
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/eo-db/src/main/java/org/fluentcodes/projects/elasticobjects/calls/db/DbModelDeleteCall.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/DbModelDeleteCall">&equiv;DbModelDeleteCall</a>

    won't work actually, since you have
    the role guest with your request and no permission
    to execute.
</p>
<p>
    Actually no object mapping of the result is provided.
    The raw query result will just returned as a map by default.
</p><h6>How it works</h6>
<p>The configuration of
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/elastic-objects-test/src/main/java/org/fluentcodes/projects/elasticobjects/domain/test/AnObject.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/AnObject">&equiv;AnObject</a>

    is a special extension of
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/elastic-objects/src/main/java/org/fluentcodes/projects/elasticobjects/models/ModelConfigObject.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/ModelConfigObject">&equiv;ModelConfigObject</a>
. Any
    object with a configuration of type
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/elastic-objects/src/main/java/org/fluentcodes/projects/elasticobjects/models/ModelConfigDbObject.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/ModelConfigDbObject">&equiv;ModelConfigDbObject</a>

    could be used for a generic
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/eo-db/src/main/java/org/fluentcodes/projects/elasticobjects/calls/db/DbModelCall.java"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/></a></nobreak>
<a href="/config/ModelConfig/DbModelCall">&equiv;DbModelCall</a>

</p>
<p>
This allows to define properties like
<a href="/config/FieldConfig/table">&equiv;table</a>
 withnull
</p>
<p>
    With the implementation ofnull
    the model configuration has some role access restrictions.
</p>
<p>
    It's a nice example to show the potential of the typed JSON concept. From a client perspective a generic
    database query is straight forward setting a database object.
</p>
<p>
    And from the server side one just has to change the type of the
<nobreak><a target="github" href="https://github.com/fluentcodes/elasticobjects/blob/master/elastic-objects-test/src/main/resources//ModelConfig.json"> <img src="/pics/github.png" height="12" width="12" " style="margin:0px 4px 0px 6px;"/>ModelConfig.json</a></nobreak>
     to allow
    CRUD database requests.
</p>